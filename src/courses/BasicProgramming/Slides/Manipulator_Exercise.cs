namespace uLearn.Courses.BasicProgramming.Slides.U08_Recursion
{
	[Slide("Практика", "B8BE9F44E4FE433AA03AFC5CAB9195C5")]
	public class S099_Exercise
	{
		/*
		Куда же мы без роботов! На этой неделе вы научитесь управлять манипулятором и закрепите практику тестирования кода.

		## Решение треугольника (1 балл)

		Реализуйте метод RobotMathematics.GetAngle 

		Напишите модульные тесты, которые убедят нас в том, что метод работает. Вы должны протестировать все особые случаи!

		Подсказка: при недопустимых аргументах GetAngle вы можете 
		- или возвращать double.NaN
		- или выбрасывать исключение (throw new ArgumentException()), если умеете работать с исключениями.

		## Решение манипулятора  (1 балл)

		Реализуйте метод RobotMathematics.MoveTo. 

		Сверяйтесь с чертежом! Не перепутайте углы!

		![Чертеж манипулятора](manipulator.png)

		Напишите функциональный тест, который убедит нас в том, что метод способен привести робота в нужное положение.

		## Ручное управление  (1 балл)

		Замените метод Program.Paint так, чтобы он рисовал робота по полям Wrist, Elbow, Shoulder и константам RobotMathematics.UpperArm, RobotMathematics.Forearm, RobotMathematics.Palm.

		Замените метод Program.KeyDown так, чтобы по нажатию клавиш WS (изменение Y), AD (изменение X), и RF (изменение Angle) пересчитывались поля Wrist, Elbow, Shoulder.

		## Whistles and Bells  (1 балл)

		Добавьте плавное движение: при зажатии клавиши W робот должен начинать перемещаться вверх, при отпускании - останавливаться. Используйте form.KeyUp по аналогии с form.KeyDown для фиксации отпускания клавиши. Используйте Timer для обеспечения анимации.

		Добавьте клавиши Shift, Ctrl: нажатие клавиши Shift должно ускорять шаг, нажатие Ctrl - замедлять.

		Добавьте управление с помощью мыши: при нажатии клавиши мыши в точке X,Y робот должен ПЛАВНО (не рывком!) переходить в эту координату. При повороте колеса мыши должен изменяться параметр Angle. 


		*/
	}
}