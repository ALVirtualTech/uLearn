namespace uLearn.Courses.BasicProgramming.Slides.U06_AutomaticTesting
{
	[Slide("Практика", "{7450E665-B1ED-4E8B-A78B-7F74AEAC3144}")]
	public class S099_Exercise
	{
		/* 
		## Разбор текста и тестирование

		Каждая следующая задача является развитием предыдущей. Сдавать нужно только самую сложную, которую у вас получилось решить.

		Требуется написать консольную программу, которой в качестве первого аргумента указывается имя исходного файла, 
		а в качестве второго — число f.

		Программа для каждой строки исходного файла должна вывести поле номер f в этой строке, либо null, если в строке было менее f полей. 
		Что такое "поле" описано ниже.

		
		Основная часть решения должна быть оформлена в виде отдельной функции.
		
		### Декомпозиция
		
		В этой задаче будет строго оцениваться стиль кода.
		Не должно быть слишком длинных методов (в частности, написать все решение в одном методе — плохая идея).
		Все методы, аргументы, локальные переменные должны иметь понятные, говорящие имена (например, flag — плохое имя для переменной).
		Не должно быть дублирования кода.
		
		В нашем курсе мы не знакомим вас с концепциями конечного автомата и регулярных выражений.
		Но если вы знакомы с ними и хотите применить их в этой задаче, то будьте осторожны.
		С помощью этих концепций очень легко получить непонятный, трудно читаемый код, корректность которого не очевидна.

		### Тестирование
		
		В решении обязательно должны быть модульные тесты, проверяющие корректность работы вашей функции на всех важных случаях.
		Обратите внимание на количество тестов. Чем больше вы напишете тестов, тем лучше.
		Если тестов будет больше, чем нужно — это не страшно. Страшнее, если вы забудете протестировать какой-нибудь частный случай.

		
		### 1. Разбить по пробелам (1 балл)

		Поля не могут содержать пробельных символов и разделяются одним или несколькими пробельными символами.

		### 2. Кавычки (+2 балла)

		Поля могут содержать пробелы, но все поля с пробельными символами
		заключены в двойные или одинарные кавычки.
		То есть строка `a "bcd ef"   'x y'` содержит три поля, а не пять.

		Кавычки могут быть вложенными. То есть строка `"a 'b' 'c' d" '"1" "2" "3"'` содержит два поля.

		Поля, заключенные в кавычки, могут не отделяться от других полей пробелами. 
		То есть строка `a"b c d e"f` содержит 3 поля `a`, `b c d e` и `f`.

		Если в строке отсутствует последняя парная закрывающая кавычка, считать, что соответствующее поле заканчивается в конце строки.
		То есть строка `abc "def g h` содержит два поля.

		### 3. Экранирование (+1 балл)

		Теперь поле внутри двойных кавычек может содержать символы кавычек, экранированные символом '\'. 
		Символ '\' также может быть экранирован самим же собой.
		То есть строка  `"a \"c\""` содержит одно поле, а строка `"\\" b` — два поля.

		*/
	}
}