namespace uLearn.Courses.BasicProgramming.Slides.U10_Practice
{
	[Slide("Практика", "09B089035F784AA89C95DA9F3FCB07A0")]
	public class S099_Exercise
	{
		/*
		## Манипулятор

		Куда же мы без робототехники! 
		На этой неделе вы научитесь управлять манипулятором и закрепите практику тестирования кода.

		Скачайте проект [manipulator](manipulator.zip).

		## Решение треугольника (1 балл)

		Реализуйте метод `RobotMathematics.GetAngle(a, b, c)`.
		Он должен возвращать угол в радианах между сторонами a и b в треугольнике со сторонами a, b, c

		Напишите модульные тесты, которые убедят нас в том, что метод работает. Вы должны протестировать все особые случаи!

		Подсказка: при недопустимых аргументах `GetAngle` вы можете

		* или возвращать `double.NaN`
		* или выбрасывать исключение (`throw new ArgumentException()`), если умеете работать с исключениями.

		## Решение манипулятора  (1 балл)

		Реализуйте метод `double[] RobotMathematics.MoveTo(double x, double y, double alpha)`.  
		Он должен возвращать массив углов (Shoulder, Elbow, Wrist), 
		необходимых для приведения эффектора манипулятора в точку (x, y) 
		с углом между последним суставом и горизонталью, равному alpha в радианах.

		Сверяйтесь с чертежом! Не перепутайте углы!

		![Чертеж манипулятора](manipulator.png)

		Напишите функциональный тест, который убедит нас в том, что метод способен привести 
		эффектор манипулятора в нужное положение.

		## Ручное управление  (1 балл)

		Замените метод `Program.Paint` так, чтобы он рисовал робота по полям Wrist, Elbow, Shoulder 
		и константам RobotMathematics.UpperArm, RobotMathematics.Forearm, RobotMathematics.Palm.
		
		Замените метод `Program.KeyDown` так, чтобы по нажатию клавиш 
		WS (изменение x), AD (изменение x), и RF (изменение alpha) 
		пересчитывались поля Wrist, Elbow, Shoulder.

		## Whistles and Bells  (1 балл)

		Эта задача будет проверяться только при выполнении всех предыдущих задач.

		Добавьте плавное движение: при зажатии клавиши W эффектор должен начинать перемещаться вверх, 
		при отпускании - останавливаться. 
		Используйте form.KeyUp по аналогии с form.KeyDown для фиксации отпускания клавиши. 
		Используйте Timer для обеспечения анимации.

		Добавьте клавиши Shift, Ctrl: нажатие клавиши Shift должно ускорять шаг, нажатие Ctrl - замедлять.

		Добавьте управление с помощью мыши: при нажатии клавиши мыши в точке (x, y) эффектор должен 
		_плавно_, без рывков переходить в эту координату. 
		При повороте колеса мыши должен изменяться параметр alpha. 
		*/
	}
}