using uLearn;

namespace OOP.Slides.U12_Network
{
	[Slide("Задача: Протокол", "14CE2B360ABF4FD1AA108FA0E4B9AA5F")]
	public class S020_Protocol
	{

		/*
		TCP-сокеты умеют надежно передавать двухсторонний упорядоченный поток байт без дублирования. 
		Чтобы придать смысл потоку байт, нужно спроектировать протокол уровня приложения.
		
		Какие именно байты что именно будут обозначать?

		### Базовая версия протокола 
		Придумайте базовую версию протокола. С его помощью клиент-игрок должен уметь перед стартом сообщить серверу имя лесного жителя, 
		после старта делать очередной ход и узнавать результат предыдущего хода. 
		Клиент-визуализатор должен уметь получать текущее состояние игрового мира.

		Спроектируйте и опишите протокол взаимодействия с сервером.

		### Протокол 2.0

		Доработайте протокол так, чтобы сервер стартовал игру только после подключения к нему N игроков (N задается в конфигурации сервера). 
		Все N игроков оказываются в одном лесу и ходят по очереди.

		### Протокол 3.0

		Ранее предполагалось, что лесной житель видит состояние только той клетки на которой стоит.
		Другими словами видимость в тумане войны была 0.
		
		Доработайте протокол так, чтобы в конфигурации сервера можно было задать произвольную видимость в "тумане войны".

		*/
	}
}