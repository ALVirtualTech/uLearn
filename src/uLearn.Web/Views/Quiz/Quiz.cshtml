@using uLearn
@using uLearn.Quizes
@using CodeBlock = uLearn.Quizes.CodeBlock
@model QuizModel
@{
	var quizSlide = Model.Slide;
	var status = Model.QuizState == QuizState.NotPassed ?
		String.Format("Попытка {0} из {1}", Model.TryNumber + 1, Model.MaxDropCount + 1) :
		String.Format("Верно {0} из {1}.", Model.RightAnswers, Model.QuestionsCount);
	<h4 id="quiz-status">@status</h4>

	var remains = Model.MaxDropCount - Model.TryNumber + 1;
	for (var blockIndex = 0; blockIndex < quizSlide.Quiz.Blocks.Length; blockIndex++)
	{
		var quizBlock = quizSlide.Quiz.Blocks[blockIndex];
		var quizModel = new QuizInfoModel(Model, quizBlock, blockIndex, Model.QuizState);
		if (quizBlock is CodeBlock)
		{
			<textarea class='code code-sample code-no-linenumbers'>@(((CodeBlock)quizBlock).Text)</textarea>
		}
		else if (quizBlock is TextBlock)
		{
			@Html.Raw(((TextBlock)quizBlock).Text.RenderMd(quizSlide.Info.SlideFile))
		}
		else if (quizBlock is AbstractQuestionBlock)
		{
			var block = (AbstractQuestionBlock)quizBlock;
			var mark = "";
			var style = "";
			if (Model.QuizState != QuizState.NotPassed)
			{
				bool res;
				res = Model.ResultsForQuizes.TryGetValue(block.Id, out res) && res;
				mark = "glyphicon " + (res ? "glyphicon-ok" : "glyphicon-remove");
				style = "color: " + (res ? "green" : "red");
			}
			<h4><i class="@mark" style="@style"></i> @block.QuestionIndex. @block.Text.RenderTex()</h4>
		}

		var delim = blockIndex != quizSlide.Quiz.Blocks.Length - 1 ? "quiz-delimeter" : "";
		if (quizBlock is ChoiceBlock)
		{
			@Html.Partial("_ChoiceBlock", quizModel)
			<hr class="@delim">
		}
		else if (quizBlock is FillInBlock)
		{
			@Html.Partial("_FillInBlock", quizModel)
			<hr class="@delim">
		}
		else if (quizBlock is IsTrueBlock)
		{
			@Html.Partial("_TrueFalseBlock", quizModel)
			<hr class="@delim">
		}
	}
	<div id="SubmitQuiz" data-url='@Url.Action("SubmitQuiz", "Quiz")'>
		@if (Model.QuizState == QuizState.NotPassed)
		{
			<button class="btn btn-primary quiz-submit-btn" onclick=" submitQuiz('@Model.CourseId', '@Model.Slide.Index', '@Model.AnswersToQuizes.Count') ">Готово!</button>
		}
		else if (Model.QuizState == QuizState.Subtotal)
		{
			using (Html.BeginForm("DropQuiz", "Quiz"))
			{
				<input type="hidden" name="slideId" value="@Model.Slide.Id" />
				<input type="hidden" name="courseId" value="@Model.CourseId" />
				<button class="btn btn-danger" type="submit">Пройти тест повторно</button>
				<small>У вас остал@(remains == 1 ? "а" : "о")сь @remains из @(Model.MaxDropCount + 1) попыток</small>
			}
		}
		else if (User.IsInRole(LmsRoles.Tester))
		{
			using (Html.BeginForm("ClearAnswers", "Quiz"))
			{
				<input type="hidden" name="slideId" value="@Model.Slide.Id" />
				<input type="hidden" name="courseId" value="@Model.CourseId" />
				<button class="btn btn-danger" type="submit">Удалить ответы</button>
			}
		}
	</div>
	if (User.IsInRole(LmsRoles.Instructor))
	{
		<div class="load-content" data-url="@Url.Action("Analytics", "Quiz", new { courseId = Model.CourseId, slideIndex = Model.Slide.Index })"> </div>
	}
}