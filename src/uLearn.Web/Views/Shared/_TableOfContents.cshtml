@using uLearn
@model CoursePageModel
 
<ul class="side-bar units-list navbar-collapse collapse nav navbar-nav container">
	@{
		int index = 0;
		int groupNumber = 0;
		string previousName = "";
		foreach (var unit in Model.Course.Slides.GroupBy(z => z.Info.UnitName))
		{
			var collapseOption = unit.First().Info.UnitName == Model.Slide.Info.UnitName ? "collapse in" : "collapse";
			var currentUnit = unit.First().Info.UnitName;
			if (previousName != currentUnit)
			{
				previousName = currentUnit;
				groupNumber++;
			}
			<li class="units-list-item">
				<a data-toggle="collapse" href=@("#N" + groupNumber) class="units-list-item-text">
					@currentUnit
				</a>
				<ul id=@("N" + groupNumber) class="slides-list @collapseOption">
					@for (; index < Model.Course.Slides.Length; index++)
					{
						var slide = Model.Course.Slides[index];
						if (slide.Info.UnitName != currentUnit)
						{
							break;
						}
						var selectedSlide = index == Model.SlideIndex;
						var url = Url.Action("Slide", "Course", new { courseId = Model.Course.Id, slideIndex = index });

						<i class="@GetIconClass(slide) navbar-label" title="@GetTitle(slide)"></i>
						<li class="slide-list-item @(selectedSlide ? "selected" : "") " onclick="window.location.href = '@url'">@slide.Title</li>
					}
				</ul>
			</li>
		}
		if (Request.IsLocal)
		{
			<li class="units-list-item units-list-item-text">@Html.ActionLink("Total statistics", "TotalStatistics", "Analytics", new { courseId = Model.Course.Id, slideIndex = 0 }, null)</li>
			<li class="units-list-item units-list-item-text">@Html.ActionLink("Users statistics", "UsersStatistics", "Analytics", new { courseId = Model.Course.Id, slideIndex = 0 }, null)</li>
			<li class="units-list-item units-list-item-text">@Html.ActionLink("Personal statistics", "PersonalStatistics", "Analytics", new { courseId = Model.Course.Id, slideIndex = 0 }, null)</li>
		}
	}
</ul>

@helper GetIconClass(Slide slide)
{
	var isVisited = Model.VisitedSlide.Contains(slide.Id);
	var isComplete = !(slide is ExerciseSlide && !Model.SolvedSlide.Contains(slide.Id)
						|| slide is QuizSlide && !Model.PassedQuiz.Contains(slide.Id));
	var progressClass = isComplete ? "navbar-label-success"
		: (isVisited ? "navbar-label-danger" : "navbar-label-default");
	string typeClass = slide is QuizSlide ? "glyphicon-pushpin"
		: slide is ExerciseSlide ? (isComplete ? "glyphicon-check" : "glyphicon-edit")
			: (isVisited ? "glyphicon-ok" : "");
	@(progressClass + " glyphicon " + typeClass)
}

@helper GetTitle(Slide slide)
{
	@(slide is ExerciseSlide ? "Задача" : slide is QuizSlide ? "Тест" : "Теория")
}