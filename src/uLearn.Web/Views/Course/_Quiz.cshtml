@using uLearn
@using uLearn.Quizes
@using uLearn.Web.Controllers
@using CodeBlock = uLearn.Quizes.CodeBlock
@model CoursePageModel
@{ var quizSlide = Model.Slide as QuizSlide;}
@if (quizSlide != null)
{
	var passed = Model.PassedQuiz.Contains(quizSlide.Id);
	if (passed)
	{
		var questionBlocks = quizSlide.Quiz.Blocks
			.Where(block => block is AbstractQuestionBlock)
			.Cast<AbstractQuestionBlock>()
			.Select(block => block.IsCorrectAnswer(Model.AnswersToQuizes))
			.Where(b => b.HasValue)
			.ToList();
		var correctCount = questionBlocks.Count(b => b.Value);
		<h4> Верно @correctCount из @questionBlocks.Count. </h4>
	}
	
	var delim = "";
	for (int blockIndex = 0; blockIndex < quizSlide.Quiz.Blocks.Length; blockIndex++)
	{
		var quizBlock = quizSlide.Quiz.Blocks[blockIndex];
		var quizModel = new QuizInfoModel(Model, quizBlock, blockIndex, passed);
		if (quizBlock is CodeBlock)
		{
			<textarea class='code code-sample'>@(((CodeBlock) quizBlock).Text)</textarea>
		}
		else if (quizBlock is TextBlock)
		{
			@Html.Raw(((TextBlock)quizBlock).Text.RenderMd(quizSlide.Info.SlideFile))
		}
		else if (quizBlock is AbstractQuestionBlock)
		{
			var block = (AbstractQuestionBlock) quizBlock;
			var mark = "";
			var style = "";
			if (passed)
			{
				var res = block.IsCorrectAnswer(Model.AnswersToQuizes);
				if (res.HasValue)
				{
					mark = "glyphicon " + (res.Value ? "glyphicon-ok" : "glyphicon-remove");
//					style = "color: " + (res.Value ? "green" : "red");
				}
			}
			<h4><i class="@mark" style="@style"></i> @block.QuestionIndex. @block.Text</h4>
		}
		
		delim = blockIndex != quizSlide.Quiz.Blocks.Length - 1 ? "quiz-delimeter" : "";
		if (quizBlock is ChoiceBlock)
		{
			@Html.Partial("_ChoiceBlock", quizModel)
			<hr class="@delim">
		}
		else if (quizBlock is FillInBlock)
		{
			@Html.Partial("_FillInBlock", quizModel)
			<hr class="@delim">
		}
		else if (quizBlock is IsTrueBlock)
		{
			@Html.Partial("_TrueFalseBlock", quizModel)
			<hr class="@delim">
		}
	}
		<div id="SubmitQuiz" data-url='@Url.Action("SubmitQuiz", "Quiz")'>
			@if (!passed)
			{
				<button class="btn btn-primary quiz-submit-btn" onclick="submitQuiz('@Model.CourseId', '@Model.Slide.Index', '@Model.AnswersToQuizes.Count')">Готово!</button>
			}
			else if (User.IsInRole(LmsRoles.Tester))
			{
				using (Html.BeginForm("ClearAnswers", "Quiz"))
				{
					<input type="hidden" name="slideId" value="@Model.Slide.Id" />
					<input type="hidden" name="courseId" value="@Model.CourseId" />
					<button class="btn btn-danger" type="submit">Удалить ответы</button>
				}
			}
		</div>
	if (User.IsInRole(LmsRoles.Instructor))
	{
		@Html.Action("Analytics", "Quiz", new { courseId = Model.CourseId, slideIndex = Model.Slide.Index })
	}
}